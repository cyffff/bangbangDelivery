version: '3.8'

services:
  # Infrastructure Services
  mysql:
    image: mysql:8.0
    container_name: bangbang_mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: bangbangRoot123
      MYSQL_DATABASE: bangbang_db
      MYSQL_USER: bangbang_user
      MYSQL_PASSWORD: bangbang_pass
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - bangbang-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: bangbang_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - bangbang-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    container_name: bangbang_elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - bangbang-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Java Microservices
  auth-service:
    build:
      context: ./backend/auth-service
      dockerfile: Dockerfile.optimized
    container_name: bangbang_auth_service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/bangbang_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=bangbangRoot123
      - APP_JWT_SECRET=bangbang-super-secret-jwt-key-2023
      - APP_JWT_EXPIRATION=86400000
      - APP_JWT_REFRESHEXPIRATION=604800000
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bangbang-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api/v1/auth/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  demand-service:
    build:
      context: ./backend/demand-service
      dockerfile: Dockerfile.optimized
    container_name: bangbang_demand_service
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/bangbang_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=bangbangRoot123
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    networks:
      - bangbang-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  journey-service:
    build:
      context: ./backend/journey-service
      dockerfile: Dockerfile.optimized
    container_name: bangbang_journey_service
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/bangbang_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=bangbangRoot123
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    networks:
      - bangbang-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Node.js Microservices
  user-service:
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile.optimized
    container_name: bangbang_user_service
    ports:
      - "8082:8082"
    environment:
      - NODE_ENV=production
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/bangbang_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=bangbangRoot123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - AUTH_SERVICE_URL=http://auth-service:8081
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    networks:
      - bangbang-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  order-service:
    build:
      context: ./backend/order-service
      dockerfile: Dockerfile.optimized
    container_name: bangbang_order_service
    ports:
      - "8083:8083"
    environment:
      - NODE_ENV=production
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/bangbang_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=bangbangRoot123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - AUTH_SERVICE_URL=http://auth-service:8081
      - USER_SERVICE_URL=http://user-service:8082
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth-service:
        condition: service_healthy
      user-service:
        condition: service_healthy
    networks:
      - bangbang-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend
  frontend:
    build:
      context: ./frontend/web
      dockerfile: Dockerfile.optimized
    container_name: bangbang_frontend
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api
      - REACT_APP_AUTH_SERVICE_URL=http://localhost:8081
      - REACT_APP_USER_SERVICE_URL=http://localhost:8082
      - REACT_APP_ORDER_SERVICE_URL=http://localhost:8083
      - REACT_APP_DEMAND_SERVICE_URL=http://localhost:8084
      - REACT_APP_JOURNEY_SERVICE_URL=http://localhost:8085
    depends_on:
      auth-service:
        condition: service_healthy
      user-service:
        condition: service_healthy
      order-service:
        condition: service_healthy
      demand-service:
        condition: service_healthy
      journey-service:
        condition: service_healthy
    networks:
      - bangbang-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 5

  # API Gateway
  gateway:
    image: nginx:alpine
    container_name: bangbang_gateway
    ports:
      - "8080:80"
    volumes:
      - ./infrastructure/docker/nginx/gateway.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      frontend:
        condition: service_healthy
      auth-service:
        condition: service_healthy
      user-service:
        condition: service_healthy
      order-service:
        condition: service_healthy
      demand-service:
        condition: service_healthy
      journey-service:
        condition: service_healthy
    networks:
      - bangbang-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  bangbang-network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
  es_data: 