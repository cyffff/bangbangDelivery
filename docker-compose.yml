version: '3.8'

services:
  # Database
  mysql:
    container_name: bangbang_mysql
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: bangbang
      MYSQL_USER: bangbang
      MYSQL_PASSWORD: bangbang_password
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - bangbang-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s

  # Redis
  redis:
    container_name: bangbang_redis
    image: redis:6.2
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bangbang-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway
  gateway:
    container_name: bangbang_gateway
    image: nginx:alpine
    ports:
      - "8088:80"
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - bangbang-network
    depends_on:
      - auth-service
      - user-service
      - order-service
      - demand-service
      - journey-service

  # Backend Services - Real Java implementations
  auth-service:
    container_name: bangbang_auth
    build:
      context: ./backend/auth-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8081
      - SPRING_MAIN_ALLOW-BEAN-DEFINITION-OVERRIDING=true
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/bangbang_auth?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=rootpassword
      - SPRING_DATASOURCE_DRIVER-CLASS-NAME=com.mysql.cj.jdbc.Driver
      - SPRING_DATASOURCE_INITIALIZATION-MODE=always
      - SPRING_JPA_HIBERNATE_DDL-AUTO=update
      - SPRING_JPA_DATABASE-PLATFORM=org.hibernate.dialect.MySQL8Dialect
      - APP_JWT_SECRET=9a02115a835ee03d5fb83cd8a468ea33e4090aaaec87f53c9fa54512bbef4db8dc656c82a315fa0c785c08b0134716b81ddcd0153d2a7556f2e154912cf5675f
      - APP_JWT_EXPIRATION=86400000
      - APP_JWT_REFRESHEXPIRATION=604800000
      - APP_SERVICES_USER-SERVICE_URL=http://user-service:8082
    networks:
      - bangbang-network
    restart: on-failure
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/api/v1/auth/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  user-service:
    container_name: bangbang_user
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8082
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/bangbang_user?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=rootpassword
    networks:
      - bangbang-network
    depends_on:
      mysql:
        condition: service_healthy

  order-service:
    container_name: bangbang_order
    build:
      context: ./backend/order-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8083
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/bangbang_order?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=rootpassword
    networks:
      - bangbang-network
    depends_on:
      mysql:
        condition: service_healthy

  demand-service:
    container_name: bangbang_demand
    build:
      context: ./backend/demand-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    restart: on-failure
    networks:
      - bangbang-network
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8084/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  journey-service:
    container_name: bangbang_journey
    build:
      context: ./backend/journey-service
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    restart: on-failure
    networks:
      - bangbang-network
    depends_on:
      mysql:
        condition: service_healthy
      demand-service:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8085/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    container_name: bangbang_frontend
    build:
      context: ./frontend/web
      dockerfile: Dockerfile
    ports:
      - "3001:80"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:8088
      - SKIP_PREFLIGHT_CHECK=true
      - DISABLE_ESLINT_PLUGIN=true
      - TSC_COMPILE_ON_ERROR=true
      - ESLINT_NO_DEV_ERRORS=true
    networks:
      - bangbang-network
    depends_on:
      - gateway

networks:
  bangbang-network:
    driver: bridge

volumes:
  mysql_data:
  redis_data: 