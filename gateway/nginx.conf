server {
    listen 80;
    server_name localhost;

    # Global setting for CORS headers
    location ~ ^/api/ {
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Set a single Access-Control-Allow-Origin header
        set $cors_origin $http_origin;
        if ($cors_origin = '') {
            set $cors_origin '*';
        }
        
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
    }

    # Handle OPTIONS requests for browser-register separately
    location = /auth/browser-register {
        # Log all requests to this endpoint for debugging
        access_log /var/log/nginx/browser_register_access.log;
        error_log /var/log/nginx/browser_register_error.log debug;
        
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
            add_header 'Access-Control-Max-Age' 1728000 always;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Reject non-POST methods with 405
        if ($request_method !~ ^(POST)$) {
            return 405;
        }
        
        # Set CORS headers for all responses
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        
        # Direct proxy pass to auth service
        proxy_pass http://bangbang_auth:8081/api/v1/auth/browser-register;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Original-Method $request_method;
        proxy_set_header Content-Type $http_content_type;
        proxy_set_header Content-Length $http_content_length;
        proxy_set_header X-Requested-With $http_x_requested_with;
        proxy_read_timeout 120;
        proxy_connect_timeout 90;
        proxy_http_version 1.1;
        
        # Debug headers
        add_header X-Debug-Target "auth-browser-register-direct" always;
        add_header X-Original-URI $request_uri always;
        add_header X-Proxy-Pass "http://bangbang_auth:8081/api/v1/auth/browser-register" always;
        add_header X-Request-Method $request_method always;
        
        # Larger body size
        client_max_body_size 10m;
    }

    # Handle OPTIONS requests for register separately
    location = /auth/register {
        # More verbose logging for debugging
        access_log /var/log/nginx/register_access.log;
        error_log /var/log/nginx/register_error.log debug;
        
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Reject non-POST methods with 405
        if ($request_method !~ ^(POST)$) {
            return 405;
        }
        
        # Set CORS headers for all responses (including errors)
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        
        # Try the direct API endpoint instead of browser-register
        proxy_pass http://bangbang_auth:8081/api/v1/auth/browser-register;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 90;
        proxy_connect_timeout 90;
        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;
        
        # Pass the request method and content type headers
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-HTTP-Method $request_method;
        proxy_set_header Content-Type $http_content_type;
        
        # Explicitly empty out the Authorization header
        proxy_set_header Authorization "";
        
        # Larger body size
        client_max_body_size 10m;
        
        # Debug headers
        add_header X-Debug-Target "auth-browser-register" always;
        add_header X-Original-URI $request_uri always;
        add_header X-Proxy-Pass "http://bangbang_auth:8081/api/v1/auth/browser-register" always;
        add_header X-Request-Method $request_method always;
    }

    # Handle OPTIONS requests for login separately
    location = /auth/login {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Proxy directly to the login endpoint
        proxy_pass http://bangbang_auth:8081/api/v1/auth/login;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 90;
        proxy_connect_timeout 90;
        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;
        client_max_body_size 10m;
    }

    # Handle OPTIONS requests for logout separately
    location = /auth/logout {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Proxy directly to the logout endpoint
        proxy_pass http://bangbang_auth:8081/api/v1/auth/logout;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # Forward the Authorization header
        proxy_set_header Authorization $http_authorization;
        proxy_read_timeout 90;
        proxy_connect_timeout 90;
        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;
        client_max_body_size 10m;
    }

    # Frontend SPA - should come first
    location / {
        proxy_pass http://bangbang_frontend:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # SPA config to handle refresh/direct URL access
        try_files $uri $uri/ /index.html;
    }

    # Debug endpoint for troubleshooting
    location = /debug {
        default_type application/json;
        return 200 '{"status":"OK", "message":"Debug endpoint reached"}';
    }

    # Auth health check endpoint
    location = /api/v1/auth/health {
        proxy_pass http://bangbang_auth:8081/api/v1/auth/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 90;
        proxy_connect_timeout 90;
    }

    # Auth register API - simple pass-through
    location = /api/v1/auth/register {
        proxy_pass http://bangbang_auth:8081/api/v1/auth/register;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 90;
        proxy_connect_timeout 90;
        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;
        client_max_body_size 10m;
        
        # Add debug headers
        add_header X-Debug-Target "auth-register" always;
        add_header X-Original-URI $request_uri always;
        add_header X-Proxy-Pass "http://bangbang_auth:8081/api/v1/auth/register" always;
        
        # Error handling
        proxy_intercept_errors off;
    }
    
    # OPTIONS requests for browser-register API
    location = /api/v1/auth/browser-register {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # More verbose logging for debugging
        access_log /var/log/nginx/browser_register_access.log;
        error_log /var/log/nginx/browser_register_error.log debug;
        
        # Set CORS headers for all responses (including errors)
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        
        proxy_pass http://bangbang_auth:8081/api/v1/auth/browser-register;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 120; # Longer timeout
        proxy_connect_timeout 90;
        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;
        
        # Pass the request method and content type headers
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-HTTP-Method $request_method;
        proxy_set_header Content-Type $http_content_type;
        
        # Explicitly empty out the Authorization header
        proxy_set_header Authorization "";
        
        # Larger body size
        client_max_body_size 10m;
        
        # Debug headers
        add_header X-Debug-Target "auth-browser-register-direct" always;
        add_header X-Original-URI $request_uri always;
        add_header X-Proxy-Pass "http://bangbang_auth:8081/api/v1/auth/browser-register" always;
        add_header X-Request-Method $request_method always;
        
        # Error handling
        proxy_intercept_errors off;
    }

    location = /api/v1/auth/login {
        proxy_pass http://bangbang_auth:8081/api/v1/auth/login;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 90;
        proxy_connect_timeout 90;
        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;
        client_max_body_size 10m;
    }

    location = /api/v1/auth/refresh-token {
        proxy_pass http://bangbang_auth:8081/api/v1/auth/refresh-token;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 90;
        proxy_connect_timeout 90;
        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;
        client_max_body_size 10m;
    }

    # Auth Service - full proxy to the auth service (for other endpoints)
    location ^~ /api/v1/auth/ {
        proxy_pass http://bangbang_auth:8081/api/v1/auth/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 90;
        proxy_connect_timeout 90;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
        
        # Increase request buffer size for larger payloads
        client_max_body_size 10m;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }

    # Auth health check endpoint
    location /api/v1/auth/health {
        proxy_pass http://bangbang_auth:8081/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # User Service
    location ^~ /api/v1/users/ {
        proxy_pass http://bangbang_user:8082/api/v1/users/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Order Service
    location ^~ /api/v1/orders/ {
        proxy_pass http://bangbang_order:8083/api/v1/orders/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # API root shows gateway info
    location = /api {
        default_type application/json;
        return 200 '{"service":"BangBang Delivery API Gateway","status":"running","version":"1.0.0"}';
    }

    # Default fallback for other API endpoints - MUST BE AFTER specific API routes
    location /api/ {
        default_type application/json;
        return 200 '{"success": true, "message": "API Gateway", "data": []}';
    }
} 