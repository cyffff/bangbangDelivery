server {
    listen 80;
    server_name localhost;

    # Global setting for CORS headers
    location ~ ^/api/ {
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Enable CORS for all API endpoints
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
    }

    # Auth Service
    location /api/v1/auth/ {
        proxy_pass http://auth-service:8081/api/v1/auth/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # User Service
    location /api/v1/users/ {
        proxy_pass http://user-service:8082/api/v1/users/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Order Service
    location /api/v1/orders/ {
        proxy_pass http://order-service:8083/api/v1/orders/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Default fallback for other API endpoints
    location /api/ {
        default_type application/json;
        return 200 '{"success": true, "message": "API Gateway", "data": []}';
    }

    # API root shows gateway info
    location = /api {
        default_type application/json;
        return 200 '{"service":"BangBang Delivery API Gateway","status":"running","version":"1.0.0"}';
    }

    # Root path returns gateway information
    location / {
        default_type application/json;
        return 200 '{"message":"BangBang Delivery API Gateway","documentation":"/api/docs"}';
    }
} 