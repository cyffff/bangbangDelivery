apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: bangbang
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;

        # Global setting for CORS headers
        location ~ ^/api/ {
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH';
                add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # Set a single Access-Control-Allow-Origin header
            set $cors_origin $http_origin;
            if ($cors_origin = '') {
                set $cors_origin '*';
            }
            
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # Auth Service
        location ^~ /api/v1/auth/ {
            proxy_pass http://auth-service:8081/api/v1/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 90;
            proxy_connect_timeout 90;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_cache_bypass $http_upgrade;
            client_max_body_size 10m;
        }

        # User Service
        location ^~ /api/v1/users/ {
            proxy_pass http://user-service:8082/api/v1/users/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Order Service
        location ^~ /api/v1/orders/ {
            proxy_pass http://order-service:8083/api/v1/orders/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Demand Service
        location ^~ /api/v1/demands/ {
            proxy_pass http://demand-service:8084/api/v1/demands/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Journey Service
        location ^~ /api/v1/journeys/ {
            proxy_pass http://journey-service:8085/api/v1/journeys/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Frontend SPA - should come last
        location / {
            proxy_pass http://frontend:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # SPA config to handle refresh/direct URL access
            try_files $uri $uri/ /index.html;
        }

        # API root shows gateway info
        location = /api {
            default_type application/json;
            return 200 '{"service":"BangBang Delivery API Gateway","status":"running","version":"1.0.0"}';
        }
    } 